version: 2.1

# Default VM config to be used for macOS builds
macos_config: &macos_config
  macos:
    xcode: 12.3.0
  shell: /bin/bash --login -eo pipefail

setup_env_file: &setup_env_file
  run:
    working_directory: example/
    name: Setup .env
    command: sh scripts/generateEnv.sh

executors:
  default:
    docker:
      - image: circleci/node:12
    working_directory: ~/project

orbs:
  android: circleci/android@1.0

commands:
  attach_project:
    steps:
      - attach_workspace:
          at: ~/project

jobs:
  install-dependencies:
    executor: default
    steps:
      - checkout
      - attach_project
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - restore_cache:
          keys:
            - dependencies-example-{{ checksum "example/package.json" }}
            - dependencies-example-
      - restore_cache:
          keys:
            - dependencies-example-{{ checksum "example/e2e/package.json" }}
            - dependencies-example-e2e-
      - run:
          name: Install dependencies
          command: |
            yarn install --cwd example --frozen-lockfile
            yarn install --cwd example/e2e --frozen-lockfile
            yarn install --frozen-lockfile
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths: node_modules
      - save_cache:
          key: dependencies-example-{{ checksum "example/package.json" }}
          paths: example/node_modules
      - save_cache:
          key: dependencies-example-e2e-{{ checksum "example/package.json" }}
          paths: example/e2e/node_modules
      - persist_to_workspace:
          root: .
          paths: .

  lint:
    executor: default
    steps:
      - attach_project
      - run:
          name: Lint files
          command: |
            yarn lint

  typescript:
    executor: default
    steps:
      - attach_project
      - run:
          name: Typecheck files
          command: |
            yarn typescript

  unit-tests:
    executor: default
    steps:
      - attach_project
      - run:
          name: Run unit tests
          command: |
            yarn test --coverage
      - store_artifacts:
          path: coverage
          destination: coverage

  build-package:
    executor: default
    steps:
      - attach_project
      - run:
          name: Build package
          command: |
            yarn prepare
  # Build and Test android version of module
  android-e2e-test:
    executor:
      name: android/android-machine
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: ~/project

      - <<: *setup_env_file

      - run:
          working_directory: example/e2e
          name: Build android
          command: npm run build:android

      - android/create-avd:
          avd-name: Android_29
          system-image: system-images;android-29;default;x86
          install: true

      - android/start-emulator:
          avd-name: Android_29
          no-window: true
          post-emulator-launch-assemble-command: echo Emulator Started

      - run:
          working_directory: example/e2e
          name: Run UI Tests
          command: npm run test:android

  # Build the Test App used for UI Testing and save is to the workspace. This allows it to be used by other jobs.
  build_ios_ui:
    <<: *macos_config
    steps:
      - checkout
      - attach_workspace:
          at: ~/project

      - <<: *setup_env_file

      - restore_cache:
          keys:
            - pod-dependencies-{{ checksum "~/project/example/ios/Podfile" }}
      - run:
          working_directory: example/ios
          name: Install Pods
          command: pod install
      - save_cache:
        key: pod-dependencies-{{ checksum "~/project/example/ios/Podfile" }}
        paths:
          - ~/project/example/ios/Pods

          - run:
              working_directory: example/e2e
              name: Build
              command: npm run build:ios

          - run:
              working_directory: example/e2e
              name: Run UI Tests
              command: npm run test:ios


workflows:
  build-and-test:
    jobs:
      - install-dependencies
      - lint:
          requires:
            - install-dependencies
      - typescript:
          requires:
            - install-dependencies
      - unit-tests:
          requires:
            - install-dependencies
      - build-package:
          requires:
            - install-dependencies
      #      - android-e2e-test:
      #          requires:
      #            - install-dependencies
      - build_ios_ui:
          requires:
            - install-dependencies
